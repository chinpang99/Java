
package consultationbookingsystem;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class LguiMyConsultationVenue extends javax.swing.JFrame {

    private Lecturer current;
    private LguiDashboard mainpage;
    private Consultation consultation;
    
    public void setUser(Lecturer x){ //*IMPORTANT*
        current = x;
    }
        
    boolean window = false;
    
    public void setBoolean(Boolean y){
        window = y;
    }
    
    public LguiMyConsultationVenue() {
        initComponents();
                
        JOptionPane.showMessageDialog(this, "You Cannot Open Like This","You Cannot Open Like This!", JOptionPane.ERROR_MESSAGE);
        window = false;
    }
        
    public LguiMyConsultationVenue(LguiDashboard a) {
        initComponents();
        
        mainpage = a;
        mainpage.setLecViewConsultationVenue(this);
        window = false;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        if(window == false){
            this.dispose();
        }else{
            getConsultationVenue();
        }
        
    }//GEN-LAST:event_formWindowActivated

    public void getConsultationVenue(){
                    
        JPanel contentPane = new JPanel();
        JLabel g = new JLabel();
        g.setIcon(new ImageIcon("Lecturer Image\\previous.png"));
 
        contentPane.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));
        contentPane.setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 2));
        g.setCursor(new Cursor(Cursor.HAND_CURSOR));
        g.addMouseListener(new MouseAdapter()  
        {  
            public void mouseClicked(MouseEvent e)   
            {  
                mainpage.setUser(current); 
                mainpage.setVisible(true); 
                setVisible(false);  
            }  
        }); 

            
        ArrayList<String> venue = new ArrayList();
        for(int i = 0; i<current.getCons().size(); i++)
        { 
            consultation = current.getCons().get(i); 

                
            if(venue.contains(consultation.getVenue())){
            }else{             
                    venue.add(consultation.getVenue());

                    JPanel[] leftPanel = new JPanel[current.getCons().size()];
                    JPanel[] buttonLeftPanel = new JPanel[current.getCons().size()];
                    JLabel[] resetButton = new JLabel[current.getCons().size()];
                    JLabel[] resetButtonn = new JLabel[current.getCons().size()];
                    JPanel[] labelPanel = new JPanel[current.getCons().size()];
                    JButton[] deleteButton = new JButton[current.getCons().size()];

                    leftPanel[i] = new JPanel();    
                    resetButtonn[i] = new JLabel(consultation.getVenue(), JLabel.CENTER);  
                    leftPanel[i].setBorder(BorderFactory.createLineBorder(Color.BLUE, 2));            
                    leftPanel[i].setLayout(new BoxLayout(leftPanel[i], BoxLayout.Y_AXIS));      
                    labelPanel[i] = new JPanel();         
                    buttonLeftPanel[i] = new JPanel(); 
                    deleteButton[i] = new JButton("Delete"); 
                    resetButton[i] = new JLabel();     
                    resetButton[i].setIcon(new ImageIcon("Lecturer Image\\location-map-flat.png"));

                    String a = consultation.getVenue();
                    deleteButton[i].addActionListener(new ActionListener()                  
                    {             
                        @Override
                        public void actionPerformed (ActionEvent e)                  
                        {                   
                            for(int i = 0; i<current.getCons().size(); i++){
                                Consultation v = current.getCons().get(i);

                                if(a.equals(v.getVenue())){
                                    v.setVenue("Library"); 
                                    JOptionPane.showMessageDialog(null, "Consultation Venue Deleted","Consultation Venue Deleted!", JOptionPane.INFORMATION_MESSAGE);
                                    getConsultationVenue();
                                }
                            }
                        }               
                    });  

                    buttonLeftPanel[i].add(resetButtonn[i]);
                    buttonLeftPanel[i].add(deleteButton[i]);
                    labelPanel[i].add(resetButton[i]);
                    leftPanel[i].add(labelPanel[i]);
                    leftPanel[i].add(buttonLeftPanel[i]);
                    contentPane.add(leftPanel[i]);
                }                       
            }
            contentPane.add(g);        
            setContentPane(contentPane);
            pack();
            setExtendedState(JFrame.MAXIMIZED_BOTH);
            setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LguiMyConsultationVenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LguiMyConsultationVenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LguiMyConsultationVenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LguiMyConsultationVenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LguiMyConsultationVenue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
